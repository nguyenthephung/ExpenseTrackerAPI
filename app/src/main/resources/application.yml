server:
  port: ${SERVER_PORT:8080}

spring:
  application:
    name: ${APP_NAME:expense-tracker-api}
  main:
    allow-bean-definition-overriding: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:your-google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:your-google-client-secret}
            redirect-uri: ${GOOGLE_REDIRECT_URI:http://localhost:8080/login/oauth2/code/google}
            scope:
              - openid
              - email
              - profile
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

# Firebase configuration
firebase:
  credentials-path: ${FIREBASE_CREDENTIALS_PATH:classpath:firebase-adminsdk.json}
  project-id: ${FIREBASE_PROJECT_ID:expensetrackerapi-e92a6}

# JWT configuration
app:
  jwtSecret: ${JWT_SECRET:expenseTrackerSecretKeyForJWTTokenGenerationThatShouldBeLongEnough}
  jwtExpirationMs: ${JWT_EXPIRATION_MS:86400000}
  oauth2:
    authorized-redirect-uris: ${OAUTH2_REDIRECT_URIS:http://localhost:3000/oauth2/redirect,http://localhost:8080/api/auth/oauth2/success}

# Swagger configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method

# Logging
logging:
  level:
    org.example.security: ${LOG_LEVEL_SECURITY:INFO}
    org.springframework.security: ${LOG_LEVEL_SECURITY:INFO}
    root: ${LOG_LEVEL_ROOT:INFO}